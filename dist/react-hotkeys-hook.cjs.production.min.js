"use strict";var e,t=(e=require("hotkeys-js"))&&"object"==typeof e&&"default"in e?e.default:e,n=require("react");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}t.filter=function(){return!0},exports.useHotkeyScope=function(e,o){void 0===o&&(o=!0);var r=null!=e?e:"_"+Math.random().toString(36).substr(2,9);return n.useEffect((function(){return o&&t.setScope(r),function(){return t.deleteScope(r)}}),[]),{enableScope:function(){return t.setScope(r)},disableScope:function(){return t.deleteScope(r)}}},exports.useHotkeys=function(e,r,u,s){var c;u instanceof Array&&(s=u,u=void 0);var i=u||{},a=i.enableOnTags,l=i.filter,f=i.keyup,d=i.keydown,y=i.debug,g=n.useRef(null);null!=(c=u)&&c.scope||"all"===t.getScope()||(y&&console.debug("[useHotkeys] Automatically assigning hotkeys '"+e+"' to active scope '"+t.getScope()+"'"),u=o({},u,{scope:t.getScope()}));var p=["INPUT","TEXTAREA","SELECT"].filter((function(e){return!a||!a.includes(e)})),k=n.useCallback((function(e,t){var n,o;if(l&&!l(e))return y&&console.debug("[useHotkeys] Keyboard event with key '"+e.key+"' ignored due to custom filter"),!1;var u=(null==(n=e.target)?void 0:n.tagName)||(null==(o=e.srcElement)?void 0:o.tagName);return!l&&u&&p.includes(u)?(y&&u&&console.debug("[useHotkeys] Keyboard event with key '"+e.key+"' ignored because event target has tag '"+u+"'"),!1):g.current&&document.activeElement!==g.current?(y&&console.debug("[useHotkeys] Keyboard event with key '"+e.key+"' ignored because ref is not the active element"),!1):(r(e,t),!0)}),s?[g].concat(s):[g]);return n.useEffect((function(){return f&&!0!==d&&(u.keydown=!1),y&&console.debug("[useHotkeys] Creating new key binding for keys '"+e+"' with options: '"+JSON.stringify(u)+"'"),t(e,u||{},k),function(){return t.unbind(e,k)}}),[k,u,a,l,e]),g},exports.useIsHotkeyPressed=function(){return t.isPressed};
//# sourceMappingURL=react-hotkeys-hook.cjs.production.min.js.map
